{"version":3,"sources":["service/questionsManger.js","service/examManger.js","model/addExam/index.js"],"names":["__webpack_require__","d","__webpack_exports__","getAllExamType","getAllQuestionsType","getAllSubject","addQuestions","getQusetions","updateQUestions","_utils_request__WEBPACK_IMPORTED_MODULE_0__","request","questionsInfo","method","body","payload","arr","i","push","concat","str","join","console","log","updated","createExam","updateExam","getExamList","getExamDetail","examInfo","_ref","id","question_ids","exam_id","requestData","Promise","all","initState","examType","questionsType","subject","examList","examDetail","JSON","parse","window","localStorage","getItem","namespace","state","reducers","initData","Object","C_Users_yihan_Desktop_react_exam_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","setDetail","detail","setItem","stringify","assign","effects","C_Users_yihan_Desktop_react_exam_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","action","call","put","result","keys","wrap","_context","prev","next","sent","forEach","item","key","data","type","stop","this","_ref2","_ref3","end_time","start_time","subject_id","title","_ref2$number","number","_context2","abrupt","resolve","_ref4","_ref5","_context3","_ref6","_ref7","_context4"],"mappings":"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","file":"static/js/6.9f3e64da.chunk.js","sourcesContent":["import request from '../utils/request'\r\n// 获取所有的考试类型\r\nexport function getAllExamType(){\r\n    return request('/exam/examType');\r\n}\r\n// 获取所有的试题类型\r\nexport function getAllQuestionsType(){\r\n    return request('/exam/getQuestionsType');\r\n}\r\n// 获取所有的课程\r\nexport function getAllSubject(){\r\n    return request('/exam/subject');\r\n}\r\n// 添加试题\r\nexport function addQuestions(questionsInfo){\r\n    return request('/exam/questions',{\r\n        method:'POST',\r\n        body:questionsInfo,\r\n    });\r\n}\r\n// 获取试题\r\nexport function getQusetions(payload){\r\n    let arr = [];\r\n    for(let i in payload){\r\n        if (payload[i]) {\r\n            arr.push(`${i}=${payload[i]}`);\r\n        }\r\n    }\r\n    let str = '?'+arr.join('&');\r\n    console.log(str)\r\n    return request(`/exam/questions/condition${str}`);\r\n}\r\n\r\n// 更新试题\r\n\r\nexport function updateQUestions(updated){\r\n    return request('/exam/questions/update',{\r\n        method:'PUT',\r\n        body:updated\r\n    });\r\n}","import request from '../utils/request'\r\n\r\nexport function createExam(examInfo){\r\n  return request('/exam/exam', {\r\n      method: 'POST',\r\n      body: examInfo,\r\n  });\r\n}\r\n\r\nexport function updateExam({id, question_ids}){\r\n  return request('/exam/exam/'+id, {\r\n      method: 'PUT',\r\n      body: {question_ids: question_ids},\r\n  });\r\n}\r\n\r\nexport function getExamList(examInfo){\r\n  return request('/exam/exam', {\r\n      method: 'GET'\r\n  });\r\n} \r\n\r\nexport function getExamDetail(exam_id){\r\n  return request('/exam/exam/' + exam_id, {\r\n      method: 'GET'\r\n  });\r\n} ","import { getAllExamType, getAllQuestionsType, getAllSubject } from '@/service/questionsManger'\r\nimport { createExam, updateExam, getExamDetail } from '@/service/examManger'\r\n\r\nconst requestData = () => {\r\n  return Promise.all([\r\n    getAllExamType(),\r\n    getAllQuestionsType(),\r\n    getAllSubject()\r\n  ]);\r\n}\r\n\r\nconst initState = {\r\n  examType:[],\r\n  questionsType:[],\r\n  subject:[],\r\n  examList: [],\r\n  examDetail: JSON.parse(window.localStorage.getItem('exam')) || {}\r\n};\r\n\r\n\r\nexport default {\r\n  namespace: 'addExam',\r\n\r\n  state: initState,\r\n\r\n  reducers: {\r\n    initData (state, payload) { // 初始化数据\r\n      return {...state, ...payload}\r\n    },\r\n    setDetail (state, detail) {\r\n      window.localStorage.setItem('exam', JSON.stringify(detail))\r\n      return Object.assign({}, state, {\r\n        examDetail: detail\r\n      })\r\n    }\r\n  },\r\n\r\n  effects: {\r\n    *requestData (action, {call, put}) {\r\n      let result = yield call(requestData);\r\n      let keys = ['examType','questionsType','subject'];\r\n      let payload = {};\r\n      result.forEach((item,key)=>{\r\n          if(item){\r\n              payload[keys[key]] = item.data;\r\n          }\r\n      });\r\n      yield put({type:'initData',...payload});\r\n    },\r\n\r\n    *createExam ({end_time, exam_id, start_time, subject_id, title, number = 3}, {call, put}) {\r\n      let result = yield call(createExam, {\r\n        end_time, exam_id, start_time, subject_id, number, title\r\n      })\r\n      yield put({type: 'setDetail', ...result.data})\r\n      // yield put(routerRedux.push({\r\n      //   path: basePath + '/main/exam/edit',\r\n      //   state:{\r\n      //     parent:'考试管理',\r\n      //     child:'创建试卷',\r\n      //     id:'main-examEdit'\r\n      //   }\r\n      // }))\r\n      return Promise.resolve()\r\n    },\r\n\r\n    *updateExam ({id, question_ids}, {call, put}) {\r\n      let result = yield call(updateExam, {\r\n        id, question_ids\r\n      })\r\n      return Promise.resolve(result)\r\n    },\r\n\r\n    *getExamDetail ({exam_id}, {call, put}) {\r\n      let result = yield call(getExamDetail, exam_id)\r\n      yield put({type: 'setDetail', ...result.data})\r\n    }\r\n  }\r\n}"],"sourceRoot":""}